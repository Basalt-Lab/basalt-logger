{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "eslint:all",
        "plugin:@typescript-eslint/recommended"
    ],
    "plugins": [
        "@typescript-eslint",
        "eslint-plugin-tsdoc"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "ignorePatterns": ["node_modules/*", "esbuild.config.ts", "**/*.spec.ts", "Build/*"],
    "rules": {
        "tsdoc/syntax": "error",
        "indent": [
            "error",
            4
        ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "quotes": [
            "error",
            "single"
         ],
        "semi": [
            "error",
            "always"
        ],
        "@typescript-eslint/adjacent-overload-signatures": "error", // https://typescript-eslint.io/rules/adjacent-overload-signatures
        "@typescript-eslint/array-type": [
            "error",
            {
              "default": "array"
            }
        ], // https://typescript-eslint.io/rules/array-type
        "@typescript-eslint/await-thenable": "error", // https://typescript-eslint.io/rules/await-thenable
        "@typescript-eslint/ban-ts-comment": "error", // https://typescript-eslint.io/rules/ban-ts-comment
        "@typescript-eslint/ban-tslint-comment": "error", // https://typescript-eslint.io/rules/ban-tslint-comment
        "@typescript-eslint/ban-types": "error", // https://typescript-eslint.io/rules/ban-types
        "@typescript-eslint/class-literal-property-style": "error", // https://typescript-eslint.io/rules/class-literal-property-style
        "@typescript-eslint/consistent-generic-constructors": [
            "error",
            "type-annotation"
        ], // https://typescript-eslint.io/rules/consistent-generic-constructors
        "@typescript-eslint/consistent-indexed-object-style": [
            "error",
            "record"
        ], // https://typescript-eslint.io/rules/consistent-indexed-object-style
        "consistent-return": "error", // https://eslint.org/docs/rules/consistent-return
        // "@typescript-eslint/consistent-return": "error", // https://typescript-eslint.io/rules/consistent-return
        "@typescript-eslint/consistent-type-assertions": "error", // https://typescript-eslint.io/rules/consistent-type-assertions
        "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface"
        ], // https://typescript-eslint.io/rules/consistent-type-definitions
        "@typescript-eslint/consistent-type-exports": "error", // https://typescript-eslint.io/rules/consistent-type-exports
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
              "prefer": "type-imports",
              "fixStyle": "inline-type-imports"
            }
        ], // https://typescript-eslint.io/rules/consistent-type-imports
        "default-param-last": "off",
        "@typescript-eslint/default-param-last": "error", // https://typescript-eslint.io/rules/default-param-last
        "@typescript-eslint/dot-notation": [
            "error",
            {
              "allowPrivateClassPropertyAccess": false,
              "allowProtectedClassPropertyAccess": false,
              "allowIndexSignaturePropertyAccess": true
            }
        ], // https://typescript-eslint.io/rules/dot-notation
        "@typescript-eslint/explicit-function-return-type": "error", // https://typescript-eslint.io/rules/explicit-function-return-type
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
              "accessibility": "explicit"
            }
        ], // https://typescript-eslint.io/rules/explicit-member-accessibility
        "@typescript-eslint/explicit-module-boundary-types": "error", // https://typescript-eslint.io/rules/explicit-module-boundary-types
        "max-params": "off",
        "@typescript-eslint/max-params": [
            "error",
            {
                "max": 4
            }
        ], // https://typescript-eslint.io/rules/max-params
        "@typescript-eslint/member-ordering": "off", // https://typescript-eslint.io/rules/member-ordering
        "@typescript-eslint/no-array-delete": "error", // https://typescript-eslint.io/rules/no-array-delete
        "@typescript-eslint/no-base-to-string": "error", // https://typescript-eslint.io/rules/no-base-to-string
        "@typescript-eslint/no-confusing-non-null-assertion": "error", // https://typescript-eslint.io/rules/no-confusing-non-null-assertion
        "@typescript-eslint/no-duplicate-enum-values": "error", // https://typescript-eslint.io/rules/no-duplicate-enum-values
        "@typescript-eslint/no-duplicate-type-constituents": "error", // https://typescript-eslint.io/rules/no-duplicate-type-constituents
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "error", // https://typescript-eslint.io/rules/no-empty-function
        "@typescript-eslint/no-explicit-any": "error", // https://typescript-eslint.io/rules/no-explicit-any
        "@typescript-eslint/no-extra-non-null-assertion": "error", // https://typescript-eslint.io/rules/no-extra-non-null-assertion
        "@typescript-eslint/no-extraneous-class": "off", // https://typescript-eslint.io/rules/no-extraneous-class
        "@typescript-eslint/no-floating-promises": "error", // https://typescript-eslint.io/rules/no-floating-promises
        "@typescript-eslint/no-for-in-array": "error", // https://typescript-eslint.io/rules/no-for-in-array
        "no-implied-eval": "off",
        "@typescript-eslint/no-implied-eval": "error", // https://typescript-eslint.io/rules/no-implied-eval
        "@typescript-eslint/no-misused-new": "error", // https://typescript-eslint.io/rules/no-misused-new
        "@typescript-eslint/no-misused-promises": "error", // https://typescript-eslint.io/rules/no-misused-promises
        "@typescript-eslint/no-mixed-enums": "error", // https://typescript-eslint.io/rules/no-mixed-enums
        "@typescript-eslint/no-namespace": "error", // https://typescript-eslint.io/rules/no-namespace
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error", // https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error", // https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain
        "@typescript-eslint/no-non-null-assertion": "error", // https://typescript-eslint.io/rules/no-non-null-assertion
        "@typescript-eslint/no-redundant-type-constituents": "error", // https://typescript-eslint.io/rules/no-redundant-type-constituents
        "@typescript-eslint/no-require-imports": "error", // https://typescript-eslint.io/rules/no-require-imports
        "@typescript-eslint/no-this-alias": "error", // https://typescript-eslint.io/rules/no-this-alias
        "no-throw-literal": "off",
        "@typescript-eslint/no-throw-literal": "error", // https://typescript-eslint.io/rules/no-throw-literal
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn", // https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare
        "@typescript-eslint/no-unnecessary-condition": "off", // https://typescript-eslint.io/rules/no-unnecessary-condition
        "@typescript-eslint/no-unnecessary-qualifier": "error", // https://typescript-eslint.io/rules/no-unnecessary-qualifier
        "@typescript-eslint/no-unnecessary-type-arguments": "error", // https://typescript-eslint.io/rules/no-unnecessary-type-arguments
        "@typescript-eslint/no-unnecessary-type-assertion": "error", // https://typescript-eslint.io/rules/no-unnecessary-type-assertion
        "@typescript-eslint/no-unsafe-argument": "error",  // https://typescript-eslint.io/rules/no-unsafe-argument
        "@typescript-eslint/no-unsafe-assignment": "error", // https://typescript-eslint.io/rules/no-unsafe-assignment
        "@typescript-eslint/no-unsafe-call": "error", // https://typescript-eslint.io/rules/no-unsafe-call
        "@typescript-eslint/no-unsafe-declaration-merging": "error", // https://typescript-eslint.io/rules/no-unsafe-declaration-merging
        "@typescript-eslint/no-unsafe-enum-comparison": "error", // https://typescript-eslint.io/rules/no-unsafe-enum-comparison
        "@typescript-eslint/no-unsafe-member-access": "error", // https://typescript-eslint.io/rules/no-unsafe-member-access
        "@typescript-eslint/no-unsafe-return": "error", // https://typescript-eslint.io/rules/no-unsafe-return
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": "error", // https://typescript-eslint.io/rules/no-unused-expressions
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "error", // https://typescript-eslint.io/rules/no-unused-vars
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": "error", // https://typescript-eslint.io/rules/no-use-before-define
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "error", // https://typescript-eslint.io/rules/no-useless-constructor
        "@typescript-eslint/no-useless-empty-export": "error", // https://typescript-eslint.io/rules/no-useless-empty-export
        "@typescript-eslint/no-useless-template-literals": "error", // https://typescript-eslint.io/rules/no-useless-template-literals
        "@typescript-eslint/no-var-requires": "error", // https://typescript-eslint.io/rules/no-var-requires
        "@typescript-eslint/non-nullable-type-assertion-style": "off", // https://typescript-eslint.io/rules/non-nullable-type-assertion-style
        "@typescript-eslint/prefer-as-const": "error", // https://typescript-eslint.io/rules/prefer-as-const
        "prefer-destructuring": "off",
        "@typescript-eslint/prefer-destructuring": "error", // https://typescript-eslint.io/rules/prefer-destructuring
        "@typescript-eslint/prefer-enum-initializers": "error", // https://typescript-eslint.io/rules/prefer-enum-initializers
        "@typescript-eslint/prefer-find": "error", // https://typescript-eslint.io/rules/prefer-find
        "@typescript-eslint/prefer-function-type": "error", // https://typescript-eslint.io/rules/prefer-function-type
        "@typescript-eslint/prefer-includes": "error", // https://typescript-eslint.io/rules/prefer-includes
        "@typescript-eslint/prefer-literal-enum-member": "error", // https://typescript-eslint.io/rules/prefer-literal-enum-member
        "@typescript-eslint/prefer-nullish-coalescing": "error", // https://typescript-eslint.io/rules/prefer-nullish-coalescing
        "prefer-promise-reject-errors": "off",
        "@typescript-eslint/prefer-promise-reject-errors": "error", // https://typescript-eslint.io/rules/prefer-promise-reject-errors
        "@typescript-eslint/prefer-readonly": "error", // https://typescript-eslint.io/rules/prefer-readonly
        "@typescript-eslint/prefer-readonly-parameter-types": "off", // https://typescript-eslint.io/rules/prefer-readonly-parameter-types
        "@typescript-eslint/prefer-reduce-type-parameter": "error", // https://typescript-eslint.io/rules/prefer-reduce-type-parameter
        "require-await": "off",
        "@typescript-eslint/require-await": "error", // https://typescript-eslint.io/rules/require-await
        "@typescript-eslint/restrict-plus-operands": "error", // https://typescript-eslint.io/rules/restrict-plus-operands
        "no-return-await": "off",
        "@typescript-eslint/return-await": "error", // https://typescript-eslint.io/rules/return-await
        "@typescript-eslint/unbound-method": "error", // https://typescript-eslint.io/rules/unbound-method
        "@typescript-eslint/unified-signatures": "error", // https://typescript-eslint.io/rules/unified-signatures
        "require-unicode-regexp": "off",
        "no-ternary": "off",
        "max-lines": "off",
        "no-undefined": "off",
        "no-continue": "off",
        "no-underscore-dangle": "off",
        "class-methods-use-this": "off",
        "one-var": "off",
        "no-magic-numbers": "off",
        "no-console": "off",
        "curly": ["error", "multi", "consistent"],
        "func-style": "off",
        "sort-imports": "off",
        "sort-keys": "off",
        "array-callback-return": "error",
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": "error",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "off",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-condition": "error",        
        "no-constructor-return": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-delete-var": "error",
        "no-empty": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-semi": "error",
        "no-global-assign": "error",
        "no-case-declarations": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-self-assign": "error",
        "no-setter-return": "error",
        "no-shadow": "off",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-this-before-super": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unused-labels": "error",
        "no-useless-catch": "off",
        "no-useless-escape": "error",
        "no-with": "error",
        "require-yield": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "no-array-constructor": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-unneeded-ternary": "error",
        "no-whitespace-before-property": "error",
        "space-infix-ops": "error",
        "arrow-spacing": "error",
        "no-useless-computed-key": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "object-curly-spacing": [
            "error",
            "always"
        ]
    }
}
